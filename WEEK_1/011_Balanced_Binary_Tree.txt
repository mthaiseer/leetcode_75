/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution {

    public int height(TreeNode root) {

        if (root == null)
            return -1;

        int leftHeight = height(root.left);
        int rightHeight = height(root.right);

        return Math.max(leftHeight, rightHeight) + 1;

    }

    public boolean isBalanced(TreeNode root) {

        if( root == null) return true;

        int leftHeight = height(root.left);
        int rightHeight = height(root.right); 

        if( Math.abs(leftHeight - rightHeight) > 1) return false;
        return isBalanced(root.left ) && isBalanced(root.right);

    }
}