/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {

        ListNode dHead = new ListNode(-1);
        ListNode dTail = dHead;

        ListNode node1 = list1;
        ListNode node2 = list2;

        while (node1 != null && node2 != null) {

            if (node1.val <= node2.val) {
                dTail.next = node1;
                node1 = node1.next;
                dTail = dTail.next;

            } else {
                dTail.next = node2;
                node2 = node2.next;
                dTail = dTail.next;
            }

        }

        if (node1 != null) {
            dTail.next = node1;
        }

        if (node2 != null) {
            dTail.next = node2;
        }

        return dHead.next;

    }
}